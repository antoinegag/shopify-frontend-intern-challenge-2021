{"version":3,"sources":["components/MovieCard/MovieCard.module.scss","components/NominatedMovieEntry/NominatedMovieEntry.module.scss","components/common/Pager/Pager.module.scss","components/Header/Header.module.scss","components/SearchInput/SearchInput.module.scss","App.module.scss","icons/Icon.module.scss","components/common/MoviePoster/MoviePoster.module.scss","components/SearchBlankState/SearchBlankState.module.scss","components/DoneNotice/DoneNotice.module.scss","components/Header/index.tsx","components/Header/Header.tsx","components/SearchInput/index.ts","components/SearchInput/SearchInput.tsx","components/DoneNotice/done.svg","components/DoneNotice/DoneNotice.tsx","api/OMDBClient.ts","icons/Icon.tsx","icons/IconClose.tsx","components/common/MoviePoster/UnknownPoster.svg","components/common/MoviePoster/MoviePoster.tsx","components/MovieCard/index.ts","components/MovieCard/MovieCard.tsx","components/common/MoviePoster/index.ts","components/NominatedMovieEntry/index.ts","components/NominatedMovieEntry/NominatedMovieEntry.tsx","components/common/Pager/index.ts","components/common/Pager/Pager.tsx","components/SearchBlankState/illustration.svg","components/SearchBlankState/SearchBlankState.tsx","components/SearchBlankState/index.ts","components/NominationsBlankState/ticket.svg","components/NominationsBlankState/index.ts","components/NominationsBlankState/NominationBlankState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","styles","header","title","subtitle","SearchInput","onQueryChange","container","searchbar","placeholder","onChange","e","target","value","type","DoneNotice","src","done","alt","buildSearchQuery","year","page","queryString","process","searchOMDB","params","a","fetch","res","ok","json","result","Error","status","statusText","console","error","JSON","stringify","Icon","props","size","color","strokeWidth","xmlns","viewBox","classNames","children","IconClose","x1","y1","x2","y2","MoviePoster","poster","unknown_poster","UnknowPoster","MovieCard","Title","Year","imdbID","Type","Poster","nominated","onNominate","onRemoveNomination","movie","info","title_container","controls","nominated_badge","remove_icon","onClick","nominate","href","NominatedMovieEntry","Pager","currentPage","pageCount","onNext","onPrevious","disabled","page_number","current","count","hints","SearchBlankState","randomHint","Math","floor","random","length","hint","illustration","NominationBlankState","ticket","style","maxWidth","App","useState","results","setResults","setNominated","setCurrentPage","query","setQuery","useEffect","searchResults","searchMovies","handleQueryChange","handleNominate","find","m","newNominated","undefined","handleRemoveNomination","index","findIndex","updated","splice","body","searchbox_container","debounce","Response","window","scrollTo","ceil","parseInt","totalResults","Search","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0JACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,gBAAkB,mCAAmC,MAAQ,yBAAyB,gBAAkB,mCAAmC,YAAc,+BAA+B,SAAW,4BAA4B,OAAS,0BAA0B,SAAW,8B,iBCAvWD,EAAOC,QAAU,CAAC,UAAY,uCAAuC,OAAS,oCAAoC,eAAiB,4CAA4C,KAAO,kCAAkC,MAAQ,mCAAmC,SAAW,sCAAsC,YAAc,2C,kBCAlUD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,YAAc,2BAA2B,QAAU,uBAAuB,MAAQ,uB,kBCAzID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,2B,gBCA3FD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,UAAY,iC,iBCA5GD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,oBAAsB,mC,gBCAjED,EAAOC,QAAU,CAAC,UAAU,sBAAsB,UAAU,sBAAsB,UAAU,sBAAsB,cAAc,0BAA0B,aAAa,2B,gBCAvKD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,eAAiB,sC,gBCAxED,EAAOC,QAAU,CAAC,UAAY,oCAAoC,KAAO,iC,mBCAzED,EAAOC,QAAU,CAAC,UAAY,gC,wKCCfC,ECCU,WACvB,OACE,sBAAKC,UAAWC,IAAOC,OAAvB,UACE,sBAAKF,UAAWC,IAAOE,MAAvB,UACE,sCACA,+CAEF,qBAAKH,UAAWC,IAAOG,SAAvB,gD,iBCRSC,ECK6B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7C,OACE,sBAAKN,UAAWC,IAAOM,UAAvB,UACE,oBAAIP,UAAWC,IAAOE,MAAtB,wCACA,uBACEH,UAAWC,IAAOO,UAClBC,YAAY,yCACZC,SAAU,SAACC,GAAD,OAAOL,GAAiBA,EAAcK,EAAEC,OAAOC,QACzDC,KAAK,a,2DCfE,MAA0B,iCCoB1BC,EAhBc,WAC3B,OACE,qBAAKf,UAAWC,IAAOM,UAAvB,SACE,gCACE,yDACA,0DACA,kHAIA,qBAAKS,IAAKC,EAAMC,IAAI,gDCmC5B,SAASC,EAAT,GAA0E,IAA9ChB,EAA6C,EAA7CA,MAAOW,EAAsC,EAAtCA,KAAMM,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,KACzCC,EAAW,sCAlDDC,UAkDC,cAA+CpB,GAc9D,OAZIW,IACFQ,GAAW,gBAAaR,IAGtBM,IACFE,GAAW,aAAUF,IAGnBC,IACFC,GAAW,gBAAaD,IAGnBC,EAGF,SAAeE,EAAtB,kC,4CAAO,WAA0BC,GAA1B,iBAAAC,EAAA,+EAEeC,MAAMR,EAAiBM,IAFtC,YAEGG,EAFH,QAIKC,GAJL,iCAKoBD,EAAIE,OALxB,cAKKC,EALL,yBAOMA,GAPN,cASK,IAAIC,MAAJ,kBAAqBJ,EAAIK,OAAzB,aAAoCL,EAAIM,aAT7C,gEAYHC,QAAQC,MAAR,MAEM,IAAIJ,MAAJ,8BACmBP,EAAOtB,MAD1B,yBACgDkC,KAAKC,UACvDb,GAFE,oBAdH,2D,4DCxCQc,EApBK,SAACC,GACnB,IAAMC,EAAOD,EAAMC,MAAQ,KACrBC,EAAQF,EAAME,OAAS,OAC7B,OACE,6CACEC,YAAY,KACZC,MAAM,6BACNC,QAAQ,cACR7C,UAAW8C,IACTN,EAAMxC,UACNC,IAAO,QAAD,OAASwC,IACfxC,IAAO,SAAD,OAAUyC,MAEdF,GATN,aAWGA,EAAMO,aCVEC,EATU,SAACR,GACxB,OACE,eAAC,EAAD,2BAAUA,GAAV,cACE,sBAAMS,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAQ,IACzC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,Y,iCCPxB,MAA0B,0CCsB1BC,EAd4B,SAAC,GAAa,IAAXrC,EAAU,EAAVA,IAC5C,OACE,8BACIA,GAAe,QAARA,EAKP,qBAAKA,IAAKA,EAAKhB,UAAWC,IAAOqD,OAAQpC,IAAI,iBAJ7C,qBAAKlB,UAAWC,IAAOsD,eAAvB,SACE,qBAAKvC,IAAKwC,EAActC,IAAI,uBCXvBuC,ECU6B,SAAC,GAStC,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,WACAC,EACI,EADJA,mBAEMC,EAA+B,CAAER,QAAOC,OAAMC,SAAQC,OAAMC,UAElE,OACE,sBAAK9D,UAAWC,IAAOM,UAAvB,UACE,cAAC,EAAD,CAAaS,IAAK8C,IAClB,sBAAK9D,UAAWC,IAAOkE,KAAvB,UACE,gCACE,sBAAKnE,UAAWC,IAAOmE,gBAAvB,UACE,qBAAKpE,UAAWC,IAAOE,MAAvB,SAA+BuD,IAC/B,8BAAMC,OAER,sBAAK3D,UAAWC,IAAOoE,SAAvB,UACGN,GACC,sBAAK/D,UAAWC,IAAOqE,gBAAvB,UACE,4CACCL,GACC,qBACEjE,UAAWC,IAAOsE,YAClBC,QAAS,kBAAMP,EAAmBC,IAFpC,SAIE,cAAC,EAAD,CAAWxB,MAAM,gBAKvBqB,GAAaC,GACb,wBACEhE,UAAWC,IAAOwE,SAClBD,QAAS,kBAAMR,EAAWE,IAF5B,4BASN,8BACE,mBAAGQ,KAAI,qCAAgCd,EAAhC,KAAP,2BCxDKP,I,gBCAAsB,ECQ6B,SAAC,GAOtC,IANLjB,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,OACAG,EACI,EADJA,mBAEA,OACE,sBAAKjE,UAAWC,IAAOM,UAAvB,UACE,cAAC,EAAD,CAAaS,IAAK8C,IAClB,qBAAK9D,UAAWC,IAAOkE,KAAvB,SACE,gCACE,qBAAKnE,UAAWC,IAAOE,MAAvB,SAA+BuD,IAC/B,8BAAMC,SAGV,qBAAK3D,UAAWC,IAAOoE,SAAvB,SACGJ,GACC,qBACEO,QAAS,kBACPP,EAAmB,CAAEP,QAAOC,OAAMC,SAAQC,OAAMC,YAElD9D,UAAWC,IAAOsE,YAJpB,SAME,cAAC,EAAD,CAAW7B,MAAM,OAAOD,KAAK,e,gBCjC1BmC,ECSqB,SAAC,GAK9B,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,OACAC,EACI,EADJA,WAEA,OACE,sBAAKhF,UAAWC,IAAOM,UAAvB,UACE,wBAAQiE,QAASQ,EAAYC,SAA0B,IAAhBJ,EAAvC,kBAGA,sBAAK7E,UAAWC,IAAOiF,YAAvB,UACE,sBAAMlF,UAAWC,IAAOkF,QAAxB,SAAkCN,IAClC,uBAAM7E,UAAWC,IAAOmF,MAAxB,cAAiCN,QAEnC,wBAAQN,QAASO,EAAQE,SAAUJ,IAAgBC,EAAnD,sBC1BS,MAA0B,yC,iBCKnCO,GAAQ,CACZ,wCACA,uDACA,+CACA,iCACA,2CACA,oDCTaC,GDYU,WACvB,IAAMC,EAAaC,KAAKC,MAAMD,KAAKE,SAAWL,GAAMM,QACpD,OACE,sBAAK3F,UAAWC,IAAOM,UAAvB,UACE,qBAAKP,UAAWC,IAAO2F,KAAvB,SAA8BP,GAAME,KACpC,qBACEvE,IAAK6E,EACL3E,IAAI,sDErBG,OAA0B,mCCE1B4E,GCCc,WAC3B,OACE,gCACE,wFACA,qBACE9E,IAAK+E,GACLC,MAAO,CAAEC,SAAU,SACnB/E,IAAI,sCC0IGgF,OAlIf,WAAgB,IAAD,EACiBC,qBADjB,mBACNC,EADM,KACGC,EADH,OAEqBF,mBAAkC,IAFvD,mBAENpC,EAFM,KAEKuC,EAFL,OAGyBH,mBAAS,GAHlC,mBAGNtB,EAHM,KAGO0B,EAHP,OAIaJ,mBAAS,IAJtB,mBAINK,EAJM,KAICC,EAJD,KAMbC,qBAAU,WAAM,4CACd,4BAAAhF,EAAA,+EAEgCF,EAAW,CACrCrB,MAAOqG,EACP1F,KAAM,QACNO,KAAMwD,IALZ,OAEU8B,EAFV,OAQIN,EAAWM,GARf,wGADc,uBAAC,WAAD,wBAadC,KACC,CAACJ,EAAO3B,IAEX,IAAMgC,EAAiB,uCAAG,WAAOL,GAAP,SAAA9E,EAAA,sDACxB6E,EAAe,GACfE,EAASD,GAFe,2CAAH,sDAKjBM,EAAiB,SAAC5C,GACtB,KACEH,EAAU4B,QAAU,GACpB5B,EAAUgD,MAAK,SAACC,GAAD,OAAOA,EAAEpD,SAAWM,EAAMN,WAF3C,CAOA,IAAMqD,EAAY,sBAAOlD,GAAP,CAAkBG,IACpCoC,EAAaW,GAEe,IAAxBA,EAAatB,SACfc,EAAS,IACTJ,OAAWa,MAITC,EAAyB,SAACjD,GAC9B,IAAMkD,EAAQrD,EAAUsD,WAAU,SAACL,GAAD,OAAOA,EAAEpD,SAAWM,EAAMN,UAE5D,IAAe,IAAXwD,EAAc,CAChB,IAAIE,EAAO,YAAOvD,GAClBuD,EAAQC,OAAOH,EAAO,GACtBd,EAAagB,KAyDjB,OACE,gCACE,cAAC,EAAD,IACA,sBAAKtH,UAAWC,IAAOuH,KAAvB,UACE,+BAAOzD,EAAU4B,OAAS,EAvD5B,qCACE,sBAAK3F,UAAWC,IAAOwH,oBAAvB,UACE,cAAC,EAAD,CAAanH,cAAeoH,IAASb,EAAmB,OAC7C,KAAVL,GAAgB,cAAC,GAAD,IACM,UAAf,OAAPJ,QAAO,IAAPA,OAAA,EAAAA,EAASuB,WACR,cAAC,EAAD,CACE9C,YAAaA,EACbG,WAAY,WACVuB,EAAe1B,EAAc,GAC7B+C,OAAOC,SAAS,EAAG,IAErB9C,OAAQ,WACNwB,EAAe1B,EAAc,GAC7B+C,OAAOC,SAAS,EAAG,IAErB/C,UAAWU,KAAKsC,KAAKC,SAAS3B,EAAQ4B,cAAgB,SAIrC,UAAf,OAAP5B,QAAO,IAAPA,OAAA,EAAAA,EAASuB,WACR,gCACE,8BACGvB,EAAQ6B,OAAOC,KAAI,SAAChE,GAAD,OAClB,cAAC,EAAD,2BACMA,GADN,IAEEF,WAAY8C,EACZ7C,mBAAoBkD,EACpBpD,WAC6D,IAA3DA,EAAUsD,WAAU,SAACL,GAAD,OAAOA,EAAEpD,SAAWM,EAAMN,kBAKtD,cAAC,EAAD,CACEiB,YAAaA,EACbG,WAAY,WACVuB,EAAe1B,EAAc,GAC7B+C,OAAOC,SAAS,EAAG,IAErB9C,OAAQ,WACNwB,EAAe1B,EAAc,GAC7B+C,OAAOC,SAAS,EAAG,IAErB/C,UAAWU,KAAKsC,KAAKC,SAAS3B,EAAQ4B,cAAgB,YAYb,cAAC,EAAD,MAC/C,kCACE,6CACCjE,EAAU4B,OAAS,EAClB5B,EAAUmE,KAAI,SAAChE,GAAD,OACZ,cAAC,EAAD,2BACMA,GADN,IAEED,mBAAoBkD,QAIxB,cAAC,GAAD,cC9HGgB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.e873ecd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieCard_container__1O8G6\",\"info\":\"MovieCard_info__5JTtX\",\"title_container\":\"MovieCard_title_container__3mHOw\",\"title\":\"MovieCard_title__3rHkd\",\"nominated_badge\":\"MovieCard_nominated_badge__W83KQ\",\"remove_icon\":\"MovieCard_remove_icon__3eJOY\",\"controls\":\"MovieCard_controls__2GeLT\",\"remove\":\"MovieCard_remove__1V9cT\",\"nominate\":\"MovieCard_nominate__WjDW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NominatedMovieEntry_container__lYTHE\",\"poster\":\"NominatedMovieEntry_poster__3VW7L\",\"unknown_poster\":\"NominatedMovieEntry_unknown_poster__ryC-3\",\"info\":\"NominatedMovieEntry_info__3KfcQ\",\"title\":\"NominatedMovieEntry_title__2mVxR\",\"controls\":\"NominatedMovieEntry_controls__3b-y4\",\"remove_icon\":\"NominatedMovieEntry_remove_icon__3UjTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pager_container__22xn9\",\"page_number\":\"Pager_page_number__c2vAX\",\"current\":\"Pager_current__lIrSY\",\"count\":\"Pager_count__1Gj6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__4Y_zu\",\"title\":\"Header_title__2gnU_\",\"subtitle\":\"Header_subtitle__2Nk0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchInput_container__258Pr\",\"title\":\"SearchInput_title__1uIDk\",\"searchbar\":\"SearchInput_searchbar__38oV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__1uLcL\",\"searchbox_container\":\"App_searchbox_container__FhutL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"size-sm\":\"Icon_size-sm__1wyOg\",\"size-md\":\"Icon_size-md__1jQun\",\"size-lg\":\"Icon_size-lg__26-Ex\",\"color-light\":\"Icon_color-light__3-jHw\",\"color-dark\":\"Icon_color-dark__2eXlw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"MoviePoster_poster__3vuFu\",\"unknown_poster\":\"MoviePoster_unknown_poster__opvl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBlankState_container__3ZZt7\",\"hint\":\"SearchBlankState_hint__lW3-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DoneNotice_container__2dXla\"};","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styles from \"./Header.module.scss\";\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <div className={styles.title}>\r\n        <div>The</div>\r\n        <span>Shoppies</span>\r\n      </div>\r\n      <div className={styles.subtitle}>Movie awards for entrepreneurs</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import SearchInput from \"./SearchInput\";\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./SearchInput.module.scss\";\r\ninterface SearchBoxProps {\r\n  onQueryChange?: (query: string) => void;\r\n}\r\n\r\nconst SearchBox: React.FC<SearchBoxProps> = ({ onQueryChange }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Search a movie to nominate</h1>\r\n      <input\r\n        className={styles.searchbar}\r\n        placeholder=\"The Empire Strikes Back, The Matrix...\"\r\n        onChange={(e) => onQueryChange && onQueryChange(e.target.value)}\r\n        type=\"text\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","export default __webpack_public_path__ + \"static/media/done.597d11c2.svg\";","import React from \"react\";\r\nimport styles from \"./DoneNotice.module.scss\";\r\nimport done from \"./done.svg\";\r\n\r\nconst DoneNotice: React.FC = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div>\r\n        <h1>You nominated 5 movies!</h1>\r\n        <h2>Talk about great tastes.</h2>\r\n        <div>\r\n          However... if you want to modify your list, you'll have to remove some\r\n          entries.\r\n        </div>\r\n        <img src={done} alt=\"Person holding a pen next to a binder\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoneNotice;\r\n","const API_KEY = process.env.REACT_APP_OMDB_API_KEY;\r\n\r\nexport interface OMDBMovieSearchResult {\r\n  Title: string;\r\n  Year: string;\r\n  imdbID: string;\r\n  Type: string;\r\n  Poster: string;\r\n}\r\n\r\ninterface OMDBSearchResultSuccess {\r\n  Search: OMDBMovieSearchResult[];\r\n  totalResults: string;\r\n  Response: \"True\";\r\n}\r\n\r\ninterface OMDBSearchResultError {\r\n  Response: \"False\";\r\n  Error: string;\r\n}\r\n\r\nexport interface OMDBMovieSearchResult {\r\n  Title: string;\r\n  Year: string;\r\n  imdbID: string;\r\n  Type: string;\r\n  Poster: string;\r\n}\r\n\r\ninterface OMDBSearchResultSuccess {\r\n  Search: OMDBMovieSearchResult[];\r\n  totalResults: string;\r\n  Response: \"True\";\r\n}\r\n\r\ninterface OMDBSearchResultError {\r\n  Response: \"False\";\r\n  Error: string;\r\n}\r\n\r\nexport type SearchResult = OMDBSearchResultError | OMDBSearchResultSuccess;\r\n\r\ninterface SearchParameters {\r\n  title: string; // s\r\n  type?: \"movie\" | \"series\" | \"episode\"; // type\r\n  year?: number; // y\r\n  page?: number; // p\r\n}\r\n\r\nfunction buildSearchQuery({ title, type, year, page }: SearchParameters) {\r\n  let queryString = `https://omdbapi.com/?apikey=${API_KEY}&s=${title}`;\r\n\r\n  if (type) {\r\n    queryString += `&type=${type}`;\r\n  }\r\n\r\n  if (year) {\r\n    queryString += `&y=${year}`;\r\n  }\r\n\r\n  if (page) {\r\n    queryString += `&page=${page}`;\r\n  }\r\n\r\n  return queryString;\r\n}\r\n\r\nexport async function searchOMDB(params: SearchParameters) {\r\n  try {\r\n    const res = await fetch(buildSearchQuery(params));\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n\r\n      return result as SearchResult;\r\n    } else {\r\n      throw new Error(`Status: ${res.status}: ${res.statusText}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n\r\n    throw new Error(\r\n      `Error searching for ${params.title} with params: ${JSON.stringify(\r\n        params\r\n      )}: ${error}`\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport IconProps from \"./IconProps\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./Icon.module.scss\";\r\n\r\nexport type IconT = React.FC<React.HTMLAttributes<SVGSVGElement> & IconProps>;\r\n\r\nconst Icon: IconT = (props) => {\r\n  const size = props.size || \"sm\";\r\n  const color = props.color || \"dark\";\r\n  return (\r\n    <svg\r\n      strokeWidth=\"10\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 100 100\"\r\n      className={classNames(\r\n        props.className,\r\n        styles[`size-${size}`],\r\n        styles[`color-${color}`]\r\n      )}\r\n      {...props}\r\n    >\r\n      {props.children}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Icon, { IconT } from \"./Icon\";\r\n\r\nconst IconClose: IconT = (props) => {\r\n  return (\r\n    <Icon {...props}>\r\n      <line x1=\"15\" y1=\"15\" x2=\"85\" y2=\"85\" />{\" \"}\r\n      <line x1=\"85\" y1=\"15\" x2=\"15\" y2=\"85\" />\r\n    </Icon>\r\n  );\r\n};\r\n\r\nexport default IconClose;\r\n","export default __webpack_public_path__ + \"static/media/UnknownPoster.9d7f9c29.svg\";","import React from \"react\";\r\nimport styles from \"./MoviePoster.module.scss\";\r\nimport UnknowPoster from \"./UnknownPoster.svg\";\r\n\r\ninterface PosterProps {\r\n  src?: string;\r\n}\r\n\r\nconst MoviePoster: React.FC<PosterProps> = ({ src }) => {\r\n  return (\r\n    <div>\r\n      {!src || src === \"N/A\" ? (\r\n        <div className={styles.unknown_poster}>\r\n          <img src={UnknowPoster} alt=\"Question mark\" />\r\n        </div>\r\n      ) : (\r\n        <img src={src} className={styles.poster} alt=\"Movie poster\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePoster;\r\n","import MovieCard from \"./MovieCard\";\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { OMDBMovieSearchResult } from \"../../api/OMDBClient\";\r\nimport IconClose from \"../../icons/IconClose\";\r\nimport styles from \"./MovieCard.module.scss\";\r\nimport MoviePoster from \"../common/MoviePoster/MoviePoster\";\r\n\r\ninterface MovieCardProps extends OMDBMovieSearchResult {\r\n  nominated?: boolean;\r\n  onNominate?: (movie: OMDBMovieSearchResult) => void;\r\n  onRemoveNomination?: (movie: OMDBMovieSearchResult) => void;\r\n}\r\n\r\nconst MovieCard: React.FC<MovieCardProps> = ({\r\n  Title,\r\n  Year,\r\n  imdbID,\r\n  Type,\r\n  Poster,\r\n  nominated,\r\n  onNominate,\r\n  onRemoveNomination,\r\n}) => {\r\n  const movie: OMDBMovieSearchResult = { Title, Year, imdbID, Type, Poster };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <MoviePoster src={Poster} />\r\n      <div className={styles.info}>\r\n        <div>\r\n          <div className={styles.title_container}>\r\n            <div className={styles.title}>{Title}</div>\r\n            <div>{Year}</div>\r\n          </div>\r\n          <div className={styles.controls}>\r\n            {nominated && (\r\n              <div className={styles.nominated_badge}>\r\n                <div>Nominated</div>\r\n                {onRemoveNomination && (\r\n                  <div\r\n                    className={styles.remove_icon}\r\n                    onClick={() => onRemoveNomination(movie)}\r\n                  >\r\n                    <IconClose color=\"light\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n            {!nominated && onNominate && (\r\n              <button\r\n                className={styles.nominate}\r\n                onClick={() => onNominate(movie)}\r\n              >\r\n                Nominate\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <a href={`https://www.imdb.com/title/${imdbID}/`}>IMDB</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import MoviePoster from \"./MoviePoster\";\r\n\r\nexport default MoviePoster;\r\n","import NominatedMovieEntry from \"./NominatedMovieEntry\";\r\n\r\nexport default NominatedMovieEntry;\r\n","import React from \"react\";\r\nimport { OMDBMovieSearchResult } from \"../../api/OMDBClient\";\r\nimport IconClose from \"../../icons/IconClose\";\r\nimport MoviePoster from \"../common/MoviePoster\";\r\nimport styles from \"./NominatedMovieEntry.module.scss\";\r\n\r\ninterface MovieCardProps extends OMDBMovieSearchResult {\r\n  onRemoveNomination?: (movie: OMDBMovieSearchResult) => void;\r\n}\r\n\r\nconst MovieCard: React.FC<MovieCardProps> = ({\r\n  Title,\r\n  Year,\r\n  imdbID,\r\n  Type,\r\n  Poster,\r\n  onRemoveNomination,\r\n}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <MoviePoster src={Poster} />\r\n      <div className={styles.info}>\r\n        <div>\r\n          <div className={styles.title}>{Title}</div>\r\n          <div>{Year}</div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.controls}>\r\n        {onRemoveNomination && (\r\n          <div\r\n            onClick={() =>\r\n              onRemoveNomination({ Title, Year, imdbID, Type, Poster })\r\n            }\r\n            className={styles.remove_icon}\r\n          >\r\n            <IconClose color=\"dark\" size=\"md\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import Pager from \"./Pager\";\r\n\r\nexport default Pager;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Pager.module.scss\";\r\n\r\ninterface PagerProps {\r\n  currentPage: number;\r\n  pageCount: number;\r\n  onPrevious?: () => void;\r\n  onNext?: () => void;\r\n}\r\n\r\nconst Pager: React.FC<PagerProps> = ({\r\n  currentPage,\r\n  pageCount,\r\n  onNext,\r\n  onPrevious,\r\n}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <button onClick={onPrevious} disabled={currentPage === 1}>\r\n        Prev\r\n      </button>\r\n      <div className={styles.page_number}>\r\n        <span className={styles.current}>{currentPage}</span>\r\n        <span className={styles.count}>/{pageCount}</span>\r\n      </div>\r\n      <button onClick={onNext} disabled={currentPage === pageCount}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pager;\r\n","export default __webpack_public_path__ + \"static/media/illustration.9f31958f.svg\";","import React from \"react\";\r\n\r\nimport illustration from \"./illustration.svg\";\r\nimport styles from \"./SearchBlankState.module.scss\";\r\n\r\nconst hints = [\r\n  \"That one movie you rewatched 10 times\",\r\n  \"What's the name of that movie again? With the guy...\",\r\n  \"That one movie that was better than the book\",\r\n  \"A Keanu Reeves movie, perhaps?\",\r\n  \"That one movie you recommend to everyone\",\r\n  \"Something more original than Wolf of Wall Street\",\r\n];\r\n\r\nconst SearchBlankState = () => {\r\n  const randomHint = Math.floor(Math.random() * hints.length);\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.hint}>{hints[randomHint]}</div>\r\n      <img\r\n        src={illustration}\r\n        alt=\"Person in the wood looking through binoculars\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBlankState;\r\n","import SearchBlankState from \"./SearchBlankState\";\r\n\r\nexport default SearchBlankState;\r\n","export default __webpack_public_path__ + \"static/media/ticket.7426d918.svg\";","import NominationBlankState from \"./NominationBlankState\";\r\n\r\nexport default NominationBlankState;\r\n","import React from \"react\";\r\nimport ticket from \"./ticket.svg\";\r\n\r\nconst NominationBlankState = () => {\r\n  return (\r\n    <div>\r\n      <h2>Search movies and nominate them, they'll show up here!</h2>\r\n      <img\r\n        src={ticket}\r\n        style={{ maxWidth: \"200px\" }}\r\n        alt=\"Person holding a movie ticket\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NominationBlankState;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport debounce from \"lodash.debounce\";\r\nimport \"./style/common.scss\";\r\nimport styles from \"./App.module.scss\";\r\nimport DoneNotice from \"./components/DoneNotice/DoneNotice\";\r\nimport {\r\n  OMDBMovieSearchResult,\r\n  searchOMDB,\r\n  SearchResult,\r\n} from \"./api/OMDBClient\";\r\nimport MovieCard from \"./components/MovieCard\";\r\nimport NominatedMovieEntry from \"./components/NominatedMovieEntry\";\r\nimport Pager from \"./components/common/Pager\";\r\nimport SearchBlankState from \"./components/SearchBlankState\";\r\nimport NominationBlankState from \"./components/NominationsBlankState\";\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState<SearchResult | undefined>();\r\n  const [nominated, setNominated] = useState<OMDBMovieSearchResult[]>([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function searchMovies() {\r\n      try {\r\n        const searchResults = await searchOMDB({\r\n          title: query,\r\n          type: \"movie\",\r\n          page: currentPage,\r\n        });\r\n\r\n        setResults(searchResults);\r\n      } catch (error) {}\r\n    }\r\n\r\n    searchMovies();\r\n  }, [query, currentPage]);\r\n\r\n  const handleQueryChange = async (query: string) => {\r\n    setCurrentPage(1);\r\n    setQuery(query);\r\n  };\r\n\r\n  const handleNominate = (movie: OMDBMovieSearchResult) => {\r\n    if (\r\n      nominated.length >= 5 || // Finished\r\n      nominated.find((m) => m.imdbID === movie.imdbID) // Already nominated\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const newNominated = [...nominated, movie];\r\n    setNominated(newNominated);\r\n\r\n    if (newNominated.length === 5) {\r\n      setQuery(\"\");\r\n      setResults(undefined);\r\n    }\r\n  };\r\n\r\n  const handleRemoveNomination = (movie: OMDBMovieSearchResult) => {\r\n    const index = nominated.findIndex((m) => m.imdbID === movie.imdbID);\r\n\r\n    if (index !== -1) {\r\n      let updated = [...nominated];\r\n      updated.splice(index, 1);\r\n      setNominated(updated);\r\n    }\r\n  };\r\n\r\n  const renderSearch = () => {\r\n    return (\r\n      <>\r\n        <div className={styles.searchbox_container}>\r\n          <SearchInput onQueryChange={debounce(handleQueryChange, 400)} />\r\n          {query === \"\" && <SearchBlankState />}\r\n          {results?.Response === \"True\" && (\r\n            <Pager\r\n              currentPage={currentPage}\r\n              onPrevious={() => {\r\n                setCurrentPage(currentPage - 1);\r\n                window.scrollTo(0, 0);\r\n              }}\r\n              onNext={() => {\r\n                setCurrentPage(currentPage + 1);\r\n                window.scrollTo(0, 0);\r\n              }}\r\n              pageCount={Math.ceil(parseInt(results.totalResults) / 10)}\r\n            />\r\n          )}\r\n        </div>\r\n        {results?.Response === \"True\" && (\r\n          <div>\r\n            <div>\r\n              {results.Search.map((movie) => (\r\n                <MovieCard\r\n                  {...movie}\r\n                  onNominate={handleNominate}\r\n                  onRemoveNomination={handleRemoveNomination}\r\n                  nominated={\r\n                    nominated.findIndex((m) => m.imdbID === movie.imdbID) !== -1\r\n                  }\r\n                />\r\n              ))}\r\n            </div>\r\n            <Pager\r\n              currentPage={currentPage}\r\n              onPrevious={() => {\r\n                setCurrentPage(currentPage - 1);\r\n                window.scrollTo(0, 0);\r\n              }}\r\n              onNext={() => {\r\n                setCurrentPage(currentPage + 1);\r\n                window.scrollTo(0, 0);\r\n              }}\r\n              pageCount={Math.ceil(parseInt(results.totalResults) / 10)}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className={styles.body}>\r\n        <main>{nominated.length < 5 ? renderSearch() : <DoneNotice />}</main>\r\n        <aside>\r\n          <h1>Nominations</h1>\r\n          {nominated.length > 0 ? (\r\n            nominated.map((movie) => (\r\n              <NominatedMovieEntry\r\n                {...movie}\r\n                onRemoveNomination={handleRemoveNomination}\r\n              />\r\n            ))\r\n          ) : (\r\n            <NominationBlankState />\r\n          )}\r\n        </aside>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}